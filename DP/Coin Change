class Solution:
    def coinChange(self, coins: List[int], amount: int) -> int:
        n=len(coins)
        
        # create an array with values that take min no.of coins to take ith idx coin to make idx+1
        coins.sort()
        memo={0:0} # key is amount and coins is value
        def min_coins(amt):
            if amt in memo:
                return memo[amt]
            minn=float('inf')
            for coin in coins:
                diff=amt-coin
                if diff<0:
                    break
                minn = min(minn, 1 + min_coins(diff))
            memo[amt]=minn
            return memo[amt]

        result=min_coins(amount)
        return result if result<float('inf') else  -1
        
