class Solution:
    def leastInterval(self, tasks: List[str], n: int) -> int:
        c_hm = {}
        for i in tasks:
            if i in c_hm:
                c_hm[i] += 1
            else:
                c_hm[i] = 1

        max_freq = max(c_hm.values())
        max_count = list(c_hm.values()).count(max_freq)

        part_count = max_freq - 1  
        part_length = n - (max_count - 1)  
        empty_slots = part_count * part_length

        remaining_tasks = len(tasks) - (max_freq * max_count)
        idles = max(0, empty_slots - remaining_tasks)

        return len(tasks) + idles


        # counts = [0] * 26
        # for task in tasks:
        #     counts[ord(task) - ord('A')] += 1
        
        # counts.sort()
        # maxf = counts[-1]
        # idle = (maxf - 1)*n

        # for count in counts[:25]:
        #     idle -= min(maxf - 1, count)
        
        # return max(0, idle) + len(tasks)
